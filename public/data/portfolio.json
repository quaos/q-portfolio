[
    {
        "id": "portGroup1",
        "title": "Enterprise Systems Integration",
        "items": [
            {
                "id": "portItem_1_1_as400",
                "title": "AS/400 Integration Middleware",
                "image": {
                    "url": "assets/img/portfolio-item-2-aspnet-tms.png",
                    "title": "AS400 Integration Middleware screenshot"
                },
                "description": "Automated IVR (Interactive Voice Response) solution for a network marketing company's call center.\n\nIt receives customer calls and connects through developed JavaEE middleware to client's AS/400 screen to retrieve data.\n\n"
            },
            {
                "id": "portItem_1_2_wmq",
                "title": "WebSphereMQ Integration Middleware",
                "image": {
                    "url": "assets/img/portfolio-item-2-aspnet-tms.png",
                    "title": "WebSphereMQ Integration Middleware screenshot"
                },
                "description": "This JavaEE application for a banking client accepts web service requests from frontend and dispatch to other services through Websphere MQ backbone to query information."
            }
        ],
        "tags": [
            "java",
            "tomcat",
            "spring",
            "soap",
            "rest",
            "mysql",
            "mssql",
            "networking",
            "as400",
            "websphere-mq",
            "ivr",
            "salesforce",
            "rightfax",
            "contact-center",
            "computer-telephony"
        ]
    },
    {
        "id": "portGroup2",
        "title": "Enterprise CMS/Resources Management",
        "items": [
            {
                "id": "portItem_2_1_enterpriseCms",
                "title": "Transport Management System on ASP.NET",
                "image": {
                    "url": "assets/img/portfolio-item-2-aspnet-tms.png",
                    "title": "Transport Management System screenshot"
                },
                "description": "I worked on some modules of this app for an Import/Export company.\n\nMostly dealing with vehicles maintenance and trips."
            },
            {
                "id": "portItem_2_2_paymentRefund",
                "title": "Payment & Refunds System",
                "image": {
                    "url": "assets/img/portfolio-item-2-aspnet-tms.png",
                    "title": "Payment & Refunds System screenshot"
                },
                "description": "Node.JS backend of Payment & Refunds web application for an insurance business.\n\nUsers can generate and send links to end customers for payment via payment gateway service."
            }
        ],
        "tags": [
            "c#",
            ".net",
            "crystalreports",
            "mssql",
            "iis",
            "windows",
            "html",
            "javascript",
            "nodejs",
            "jquery",
            "payment-gateway"
        ]
    },
    {
        "id": "portGroup4",
        "title": "Fullstack Web Development",
        "items": [
            {
                "id": "portitem_3_1_qpstudio",
                "title": "QP Studio Website",
                "image": {
                    "url": "assets/img/portfolio-item-3-1-qpweb.png",
                    "title": "qpstudio.cc website screenshot"
                },
                "description": "My little creative studio.\n\nThe Website is defined to be as cozy as home. And now with a minigame you can play!"
            },
            {
                "id": "portItem_3_2_mern_shopping",
                "title": "MERN Stack Shopping website",
                "image": {
                    "url": "assets/img/portfolio-item-3-2-mern-shopping.png",
                    "title": "MERN stack shopping website screenshot"
                },
                "description": "A client's shopping website."
            }
        ],
        "tags": [
            "javascript",
            "typescript",
            "nodejs",
            "reactjs",
            "html5",
            "css",
            "material-ui",
            "webgl",
            "game-dev",
            "deno",
            "postgresql",
            "mongodb",
            "sendgrid"
        ]
    },
    {
        "id": "portGroup4",
        "title": "Batches & System Programming",
        "visible": false,
        "items": [
            {
                "id": "portItem_4_1_etl",
                "title": "ETL Solution",
                "image": {
                    "url": "assets/img/portfolio-item-3-mern-shopping.png",
                    "title": "ETL Solution screenshot"
                },
                "description": "ETL (Extract, Transfer, Load) is for data operations.\n\nThis solution, consisting of SQL SSIS packages and jobs, is for an international insurance company that needs their data transferred daily and monthly from across countries for local use."
            },
            {
                "id": "portItem_4_2_winsvc_demo",
                "title": "(Demo) Windows Service with Systray UI",
                "image": {
                    "url": "assets/img/portfolio-item-3-mern-shopping.png",
                    "title": "Windows Service demo screenshot"
                },
                "description": ""
            }
        ],
        "tags": [
            "c#",
            "c++",
            "javascript",
            "shellscript",
            "batch-file",
            "linux",
            "windows",
            "rust",
            "mssql",
            "ssis"
        ]
    },
    {
        "id": "portGroup10",
        "title": "Side Projects & Opensources",
        "items": [
            {
                "id": "portItem_10_1_deno_rest2amqp",
                "title": "REST-to-AMQP API Gateway on Deno",
                "image": {
                    "url": "assets/img/portfolio-item-10-1-deno-rest2amqp.png",
                    "title": "REST-to-AMQP API Gateway on Deno screenshot"
                },
                "description": "Used for Microservices architecture, receiving load-balanced REST API requests and dispatch them to backing services through RabbitMQ or other AMQP-based systems\n\nSee: https://github.com/quaos/deno-rest2amqp"
            }

        ],
        "tags": [
            "javascript",
            "typescript",
            "nodejs",
            "reactjs",
            "deno",
            "rest",
            "amqp",
            "rabbitmq",
            "chatbot",
            "line-api",
            "docker",
            "docker-compose",
            "devops"
        ]
    }
]
